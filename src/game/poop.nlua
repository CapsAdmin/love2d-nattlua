local type { Body, Shape, Fixture, Image } = love.types

local Vec2 = import("./vec2.nlua")
local type Vec2 = Vec2.@Self
local Poop = {}
Poop.__index = Poop
type Poop.@Name = "Poop"
type Poop.@Self = {
	body = Body,
	shape = Shape,
	fixture = Fixture,
	image = Image,
}
local type Poop = Poop.@Self
local settings = {
	mipmaps = false,
	linear = false,
}
local poops = {}

for i = 1, 3 do
	poops[i] = love.graphics.newImage("assets/poop/" .. i .. ".png", settings)
end

function Poop:Update() end

function Poop:Draw()
	love.graphics.setColor(1, 1, 1)
	local w, h = self.image:getDimensions()
	local scalew = (1 / w) * 40
	local scaleh = (1 / h) * 40
	love.graphics.draw(
		self.image  as any,
		self.body:getX(),
		self.body:getY(),
		0,
		scalew,
		scaleh,
		w / 2,
		h / 2
	)
end

function Poop.New(pos: Vec2)
	local body = love.physics.newBody(_G.physics_world, pos.x, pos.y, "dynamic")
	local shape = love.physics.newCircleShape(20)
	local fixture = love.physics.newFixture(body, shape, 1)
	body:setLinearDamping(15)
	return setmetatable(
		{
			body = body,
			shape = shape,
			fixture = fixture,
			image = poops[math.random(1, #poops) as 1 .. #poops],
		},
		Poop
	)
end

return Poop